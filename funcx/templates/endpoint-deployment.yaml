{{- if .Values.endpoint.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-endpoint
spec:
  replicas: {{ .Values.endpoint.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-endpoint
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-endpoint
    spec:
      initContainers:
      - name: check-web-service
        image: "ncsa/checks:latest"
        env:
          - name: URL
            value: 'http://{{ .Release.Name }}-funcx-web-service:8000/v1/version'
      containers:
      - name: {{ .Release.Name }}-endpoint
        image: {{ .Values.endpoint.image }}:{{ .Values.endpoint.tag }}
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "mkdir ~/.funcx; mkdir ~/.funcx/{{ .Release.Name }}; mkdir ~/.funcx/credentials; cp /funcx/config/config.py ~/.funcx; cp /funcx/{{ .Release.Name }}/* ~/.funcx/{{ .Release.Name }}; cp /funcx/credentials/* ~/.funcx/credentials; funcx-endpoint start {{ .Release.Name }}; sleep infinity"]
        tty: true
        stdin: true
        imagePullPolicy: {{ .Values.endpoint.pullPolicy }}
        {{- if .Values.endpoint.resources }}
        resources:
{{ toYaml .Values.endpoint.resources | indent 10 }}
        {{- end }}

        volumeMounts:
          - mountPath: "/mnt"
            name: funcxmnt
          - name: funcx-sdk-tokens
            mountPath: /funcx/credentials
            readOnly: true
          - name: endpoint-config
            mountPath: /funcx/config
          - name: endpoint-instance-config
            mountPath: /funcx/{{ .Release.Name }}


        ports:
          - containerPort: 5000

      volumes:
        - name: funcxmnt
          emptyDir: {}
        - name: funcx-sdk-tokens
          secret:
            secretName: funcx-sdk-tokens
        - name: endpoint-config
          configMap:
            name: {{ .Release.Name }}-endpoint-config
        - name: endpoint-instance-config
          configMap:
            name: {{ .Release.Name }}-endpoint-instance-config
{{- end }}
