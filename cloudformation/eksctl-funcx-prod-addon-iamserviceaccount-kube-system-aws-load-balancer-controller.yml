StagesAvailable:
- Original
- Processed
TemplateBody:
  AWSTemplateFormatVersion: '2010-09-09'
  Description: IAM role for serviceaccount "kube-system/aws-load-balancer-controller"
    [created and managed by eksctl]
  Outputs:
    Role1:
      Value:
        Fn::GetAtt: Role1.Arn
  Resources:
    PolicyAWSLoadBalancerController:
      Properties:
        PolicyDocument:
          Statement:
          - Action:
            - ec2:CreateTags
            Condition:
              'Null':
                aws:RequestTag/elbv2.k8s.aws/cluster: 'false'
              StringEquals:
                ec2:CreateAction: CreateSecurityGroup
            Effect: Allow
            Resource:
              Fn::Sub: arn:${AWS::Partition}:ec2:*:*:security-group/*
          - Action:
            - ec2:CreateTags
            - ec2:DeleteTags
            Condition:
              'Null':
                aws:RequestTag/elbv2.k8s.aws/cluster: 'true'
                aws:ResourceTag/elbv2.k8s.aws/cluster: 'false'
            Effect: Allow
            Resource:
              Fn::Sub: arn:${AWS::Partition}:ec2:*:*:security-group/*
          - Action:
            - elasticloadbalancing:CreateLoadBalancer
            - elasticloadbalancing:CreateTargetGroup
            Condition:
              'Null':
                aws:RequestTag/elbv2.k8s.aws/cluster: 'false'
            Effect: Allow
            Resource: '*'
          - Action:
            - elasticloadbalancing:AddTags
            - elasticloadbalancing:RemoveTags
            Condition:
              'Null':
                aws:RequestTag/elbv2.k8s.aws/cluster: 'true'
                aws:ResourceTag/elbv2.k8s.aws/cluster: 'false'
            Effect: Allow
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:elasticloadbalancing:*:*:targetgroup/*/*
            - Fn::Sub: arn:${AWS::Partition}:elasticloadbalancing:*:*:loadbalancer/net/*/*
            - Fn::Sub: arn:${AWS::Partition}:elasticloadbalancing:*:*:loadbalancer/app/*/*
          - Action:
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:RevokeSecurityGroupIngress
            - ec2:DeleteSecurityGroup
            - elasticloadbalancing:ModifyLoadBalancerAttributes
            - elasticloadbalancing:SetIpAddressType
            - elasticloadbalancing:SetSecurityGroups
            - elasticloadbalancing:SetSubnets
            - elasticloadbalancing:DeleteLoadBalancer
            - elasticloadbalancing:ModifyTargetGroup
            - elasticloadbalancing:ModifyTargetGroupAttributes
            - elasticloadbalancing:DeleteTargetGroup
            Condition:
              'Null':
                aws:ResourceTag/elbv2.k8s.aws/cluster: 'false'
            Effect: Allow
            Resource: '*'
          - Action:
            - elasticloadbalancing:RegisterTargets
            - elasticloadbalancing:DeregisterTargets
            Effect: Allow
            Resource:
              Fn::Sub: arn:${AWS::Partition}:elasticloadbalancing:*:*:targetgroup/*/*
          - Action:
            - iam:CreateServiceLinkedRole
            - ec2:DescribeAccountAttributes
            - ec2:DescribeAddresses
            - ec2:DescribeInternetGateways
            - ec2:DescribeVpcs
            - ec2:DescribeSubnets
            - ec2:DescribeSecurityGroups
            - ec2:DescribeInstances
            - ec2:DescribeNetworkInterfaces
            - ec2:DescribeTags
            - elasticloadbalancing:DescribeLoadBalancers
            - elasticloadbalancing:DescribeLoadBalancerAttributes
            - elasticloadbalancing:DescribeListeners
            - elasticloadbalancing:DescribeListenerCertificates
            - elasticloadbalancing:DescribeSSLPolicies
            - elasticloadbalancing:DescribeRules
            - elasticloadbalancing:DescribeTargetGroups
            - elasticloadbalancing:DescribeTargetGroupAttributes
            - elasticloadbalancing:DescribeTargetHealth
            - elasticloadbalancing:DescribeTags
            - cognito-idp:DescribeUserPoolClient
            - acm:ListCertificates
            - acm:DescribeCertificate
            - iam:ListServerCertificates
            - iam:GetServerCertificate
            - waf-regional:GetWebACL
            - waf-regional:GetWebACLForResource
            - waf-regional:AssociateWebACL
            - waf-regional:DisassociateWebACL
            - wafv2:GetWebACL
            - wafv2:GetWebACLForResource
            - wafv2:AssociateWebACL
            - wafv2:DisassociateWebACL
            - shield:GetSubscriptionState
            - shield:DescribeProtection
            - shield:CreateProtection
            - shield:DeleteProtection
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:RevokeSecurityGroupIngress
            - ec2:CreateSecurityGroup
            - elasticloadbalancing:CreateListener
            - elasticloadbalancing:DeleteListener
            - elasticloadbalancing:CreateRule
            - elasticloadbalancing:DeleteRule
            - elasticloadbalancing:SetWebAcl
            - elasticloadbalancing:ModifyListener
            - elasticloadbalancing:AddListenerCertificates
            - elasticloadbalancing:RemoveListenerCertificates
            - elasticloadbalancing:ModifyRule
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName:
          Fn::Sub: ${AWS::StackName}-PolicyAWSLoadBalancerController
        Roles:
        - Ref: Role1
      Type: AWS::IAM::Policy
    PolicyCertManagerChangeSet:
      Properties:
        PolicyDocument:
          Statement:
          - Action:
            - route53:ChangeResourceRecordSets
            Effect: Allow
            Resource:
              Fn::Sub: arn:${AWS::Partition}:route53:::hostedzone/*
          Version: '2012-10-17'
        PolicyName:
          Fn::Sub: ${AWS::StackName}-PolicyCertManagerChangeSet
        Roles:
        - Ref: Role1
      Type: AWS::IAM::Policy
    PolicyCertManagerGetChange:
      Properties:
        PolicyDocument:
          Statement:
          - Action:
            - route53:GetChange
            Effect: Allow
            Resource:
              Fn::Sub: arn:${AWS::Partition}:route53:::change/*
          Version: '2012-10-17'
        PolicyName:
          Fn::Sub: ${AWS::StackName}-PolicyCertManagerGetChange
        Roles:
        - Ref: Role1
      Type: AWS::IAM::Policy
    PolicyCertManagerHostedZones:
      Properties:
        PolicyDocument:
          Statement:
          - Action:
            - route53:ListResourceRecordSets
            - route53:ListHostedZonesByName
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName:
          Fn::Sub: ${AWS::StackName}-PolicyCertManagerHostedZones
        Roles:
        - Ref: Role1
      Type: AWS::IAM::Policy
    Role1:
      Properties:
        AssumeRolePolicyDocument:
          Statement:
          - Action:
            - sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                oidc.eks.us-east-1.amazonaws.com/id/55B96EEE361D8212E89253EA78F03CDE:aud: sts.amazonaws.com
                oidc.eks.us-east-1.amazonaws.com/id/55B96EEE361D8212E89253EA78F03CDE:sub: system:serviceaccount:kube-system:aws-load-balancer-controller
            Effect: Allow
            Principal:
              Federated: arn:aws:iam::512084481048:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/55B96EEE361D8212E89253EA78F03CDE
          Version: '2012-10-17'
      Type: AWS::IAM::Role

